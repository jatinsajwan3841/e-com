{"version":3,"sources":["components/login/index.js"],"names":["Login","React","useState","loginSelect","setLogin","dp","setDp","navigate","useNavigate","location","useLocation","dispatch","useDispatch","isAuthenticated","useSelector","state","user","handleSubmit","e","a","preventDefault","email","target","value","pass","password","login","name","myForm","FormData","set","register","handleDp","tdp","files","size","reader","FileReader","onload","re","result","readAsDataURL","alert","redirect","search","split","useEffect","replace","window","google","accounts","id","renderButton","document","getElementById","type","shape","text","logo_alignment","className","onClick","onSubmit","encType","alt","src","accept","onChange","htmlFor","placeholder","minLength","required","to"],"mappings":"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","file":"static/js/19.5daeebd8.chunk.js","sourcesContent":["import React from \"react\";\nimport { useNavigate, Link, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { login, register } from \"../../actions/userAction\";\nimport \"./index.scss\";\n\nconst Login = () => {\n    const [loginSelect, setLogin] = React.useState(true);\n    const [dp, setDp] = React.useState();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const { isAuthenticated } = useSelector((state) => state.user);\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const email = e.target.email.value;\n        const pass = e.target.password.value;\n        if (!loginSelect) {\n            const name = e.target.name.value;\n            const myForm = new FormData();\n            myForm.set(\"name\", name);\n            myForm.set(\"email\", email);\n            myForm.set(\"password\", pass);\n            myForm.set(\"dp\", dp);\n            dispatch(register(myForm));\n        } else {\n            dispatch(login(email, pass));\n        }\n    };\n\n    const handleDp = async (e) => {\n        let tdp = e.target.files[0];\n        if (tdp && tdp.size < 2000000) {\n            const reader = new FileReader();\n            reader.onload = (re) => {\n                setDp(re.target.result);\n            };\n            reader.readAsDataURL(tdp);\n        } else {\n            alert(\"please choose file of size less than 2MB!\");\n        }\n    };\n    const redirect = location.search\n        ? location.search.split(\"=\")[1]\n        : \"/profile\";\n    React.useEffect(() => {\n        if (isAuthenticated) {\n            navigate(redirect, { replace: true });\n        }\n        window.google.accounts.id.renderButton(document.getElementById(\"gid\"), {\n            size: \"large\",\n            type: \"standard\",\n            shape: \"pill\",\n            text: \"continue_with\",\n            logo_alignment: \"left\",\n        });\n    }, [isAuthenticated, navigate, redirect]);\n    return (\n        <div className=\"login-container\">\n            <div className=\"switch-tabs\">\n                <div className=\"tab\" onClick={() => setLogin(true)}>\n                    Login\n                </div>\n                <div className=\"tab\" onClick={() => setLogin(false)}>\n                    Register\n                </div>\n                <span className={`border-bottom ${!loginSelect && \"shift\"}`} />\n            </div>\n            <h3 className=\"start\">\n                Let's set go <span className=\"high\">╰(*°▽°*)╯</span>{\" \"}\n                <center>\n                    <div className=\"gid\" id=\"gid\" />\n                    OR\n                </center>\n            </h3>\n            <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n                {loginSelect ? (\n                    <div className=\"avatar\" />\n                ) : (\n                    <>\n                        <div className=\"avatar\">\n                            {dp && <img className=\"dp\" alt=\"dp\" src={dp} />}\n                            <label>\n                                <span className=\"upload\" />\n                                <input\n                                    type=\"file\"\n                                    name=\"dp\"\n                                    accept=\".jpeg,.jpg,.png\"\n                                    onChange={handleDp}\n                                />\n                            </label>\n                        </div>\n                    </>\n                )}\n\n                {!loginSelect && (\n                    <div className=\"inp-content\">\n                        <label htmlFor=\"name\" className=\"label\">\n                            Please enter your name\n                        </label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            placeholder=\" \"\n                            minLength=\"3\"\n                            required\n                        />\n                        <hr className=\"border-bottom\" />\n                        <span className=\"placeholder\">name</span>\n                    </div>\n                )}\n                <div className=\"inp-content\">\n                    <label htmlFor=\"email\" className=\"label\">\n                        Please enter your email\n                    </label>\n                    <input type=\"email\" name=\"email\" placeholder=\" \" required />\n                    <hr className=\"border-bottom\" />\n                    <span className=\"placeholder\">email</span>\n                </div>\n                <div className=\"inp-content\">\n                    <label htmlFor=\"password\" className=\"label\">\n                        Please enter your password\n                    </label>\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\" \"\n                        minLength=\"6\"\n                        required\n                    />\n                    <hr className=\"border-bottom\" />\n                    <span className=\"placeholder\">password</span>\n                </div>\n                <center>\n                    <input\n                        type=\"submit\"\n                        value={loginSelect ? \"Login\" : \"Register\"}\n                        className=\"form-button\"\n                    />\n                </center>\n                <Link to=\"/password/forgot\" className=\"forgot-pass-text\">\n                    Forgot password ?\n                </Link>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n"],"sourceRoot":""}