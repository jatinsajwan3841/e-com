{"version":3,"sources":["components/login/index.js"],"names":["Login","React","useState","loginSelect","setLogin","dp","setDp","navigate","useNavigate","location","useLocation","dispatch","useDispatch","isAuthenticated","useSelector","state","user","handleSubmit","e","a","preventDefault","email","target","value","pass","password","login","name","myForm","FormData","set","register","handleDp","tdp","files","size","reader","FileReader","onload","re","result","readAsDataURL","alert","redirect","search","split","useEffect","replace","className","onClick","onSubmit","encType","alt","src","type","accept","onChange","htmlFor","placeholder","minLength","required","to"],"mappings":"qOAwIeA,UAlID,WACV,MAAgCC,IAAMC,UAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoBH,IAAMC,WAA1B,mBAAOG,EAAP,KAAWC,EAAX,KACMC,EAAWC,cACXC,EAAWC,cACXC,EAAWC,cACTC,EAAoBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAjDH,gBACFI,EAAY,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sDACjBD,EAAEE,iBACIC,EAAQH,EAAEI,OAAOD,MAAME,MACvBC,EAAON,EAAEI,OAAOG,SAASF,MAC1BpB,EASDQ,EAASe,YAAML,EAAOG,KARhBG,EAAOT,EAAEI,OAAOK,KAAKJ,OACrBK,EAAS,IAAIC,UACZC,IAAI,OAAQH,GACnBC,EAAOE,IAAI,QAAST,GACpBO,EAAOE,IAAI,WAAYN,GACvBI,EAAOE,IAAI,KAAMzB,GACjBM,EAASoB,YAASH,KAXL,2CAAH,sDAiBZI,EAAQ,uCAAG,WAAOd,GAAP,iBAAAC,EAAA,uDACTc,EAAMf,EAAEI,OAAOY,MAAM,KACdD,EAAIE,KAAO,MACZC,EAAS,IAAIC,YACZC,OAAS,SAACC,GACbjC,EAAMiC,EAAGjB,OAAOkB,SAEpBJ,EAAOK,cAAcR,IAErBS,MAAM,6CATG,2CAAH,sDAYRC,EAAWlC,EAASmC,OACpBnC,EAASmC,OAAOC,MAAM,KAAK,GAC3B,WAMN,OALA5C,IAAM6C,WAAU,WACRjC,GACAN,EAASoC,EAAU,CAAEI,SAAS,MAEnC,CAAClC,EAAiBN,EAAUoC,IAE3B,sBAAKK,UAAU,kBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,MAAMC,QAAS,kBAAM7C,GAAS,IAA7C,mBAGA,qBAAK4C,UAAU,MAAMC,QAAS,kBAAM7C,GAAS,IAA7C,sBAGA,sBAAM4C,UAAS,yBAAoB7C,GAAe,cAEtD,qBAAI6C,UAAU,QAAd,0BACiB,sBAAMA,UAAU,OAAhB,4CAAwC,OAEzD,uBAAME,SAAUjC,EAAckC,QAAQ,sBAAtC,UACI,gCACKhD,EACG,qBAAK6C,UAAU,WAEf,qCACI,sBAAKA,UAAU,SAAf,UACK3C,GAAM,qBAAK2C,UAAU,KAAKI,IAAI,KAAKC,IAAKhD,IACzC,sBAAM2C,UAAU,cAEpB,uBACIM,KAAK,OACL3B,KAAK,KACL4B,OAAO,kBACPC,SAAUxB,UAKxB7B,GACE,sBAAK6C,UAAU,cAAf,UACI,uBAAOS,QAAQ,OAAOT,UAAU,QAAhC,oCAGA,uBACIM,KAAK,OACL3B,KAAK,OACL+B,YAAY,IACZC,UAAU,IACVC,UAAQ,IAEZ,oBAAIZ,UAAU,kBACd,sBAAMA,UAAU,cAAhB,qBAGR,sBAAKA,UAAU,cAAf,UACI,uBAAOS,QAAQ,QAAQT,UAAU,QAAjC,qCAGA,uBAAOM,KAAK,QAAQ3B,KAAK,QAAQ+B,YAAY,IAAIE,UAAQ,IACzD,oBAAIZ,UAAU,kBACd,sBAAMA,UAAU,cAAhB,sBAEJ,sBAAKA,UAAU,cAAf,UACI,uBAAOS,QAAQ,WAAWT,UAAU,QAApC,wCAGA,uBACIM,KAAK,WACL3B,KAAK,WACL+B,YAAY,IACZC,UAAU,IACVC,UAAQ,IAEZ,oBAAIZ,UAAU,kBACd,sBAAMA,UAAU,cAAhB,yBAEJ,iCACI,uBACIM,KAAK,SACL/B,MAAOpB,EAAc,QAAU,WAC/B6C,UAAU,kBAGlB,cAAC,IAAD,CAAMa,GAAG,mBAAmBb,UAAU,mBAAtC","file":"static/js/13.93d271b4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useNavigate, Link, useLocation } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { login, register } from \"../../actions/userAction\";\r\nimport \"./index.scss\";\r\n\r\nconst Login = () => {\r\n    const [loginSelect, setLogin] = React.useState(true);\r\n    const [dp, setDp] = React.useState();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const { isAuthenticated } = useSelector((state) => state.user);\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const email = e.target.email.value;\r\n        const pass = e.target.password.value;\r\n        if (!loginSelect) {\r\n            const name = e.target.name.value;\r\n            const myForm = new FormData();\r\n            myForm.set(\"name\", name);\r\n            myForm.set(\"email\", email);\r\n            myForm.set(\"password\", pass);\r\n            myForm.set(\"dp\", dp);\r\n            dispatch(register(myForm));\r\n        } else {\r\n            dispatch(login(email, pass));\r\n        }\r\n    };\r\n\r\n    const handleDp = async (e) => {\r\n        let tdp = e.target.files[0];\r\n        if (tdp && tdp.size < 2000000) {\r\n            const reader = new FileReader();\r\n            reader.onload = (re) => {\r\n                setDp(re.target.result);\r\n            };\r\n            reader.readAsDataURL(tdp);\r\n        } else {\r\n            alert(\"please choose file of size less than 2MB!\");\r\n        }\r\n    };\r\n    const redirect = location.search\r\n        ? location.search.split(\"=\")[1]\r\n        : \"/profile\";\r\n    React.useEffect(() => {\r\n        if (isAuthenticated) {\r\n            navigate(redirect, { replace: true });\r\n        }\r\n    }, [isAuthenticated, navigate, redirect]);\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"switch-tabs\">\r\n                <div className=\"tab\" onClick={() => setLogin(true)}>\r\n                    Login\r\n                </div>\r\n                <div className=\"tab\" onClick={() => setLogin(false)}>\r\n                    Register\r\n                </div>\r\n                <span className={`border-bottom ${!loginSelect && \"shift\"}`} />\r\n            </div>\r\n            <h3 className=\"start\">\r\n                Let's set go <span className=\"high\">╰(*°▽°*)╯</span>{\" \"}\r\n            </h3>\r\n            <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n                <label>\r\n                    {loginSelect ? (\r\n                        <div className=\"avatar\" />\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"avatar\">\r\n                                {dp && <img className=\"dp\" alt=\"dp\" src={dp} />}\r\n                                <span className=\"upload\" />\r\n                            </div>\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"dp\"\r\n                                accept=\".jpeg,.jpg,.png\"\r\n                                onChange={handleDp}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </label>\r\n                {!loginSelect && (\r\n                    <div className=\"inp-content\">\r\n                        <label htmlFor=\"name\" className=\"label\">\r\n                            Please enter your name\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\" \"\r\n                            minLength=\"3\"\r\n                            required\r\n                        />\r\n                        <hr className=\"border-bottom\" />\r\n                        <span className=\"placeholder\">name</span>\r\n                    </div>\r\n                )}\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"email\" className=\"label\">\r\n                        Please enter your email\r\n                    </label>\r\n                    <input type=\"email\" name=\"email\" placeholder=\" \" required />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">email</span>\r\n                </div>\r\n                <div className=\"inp-content\">\r\n                    <label htmlFor=\"password\" className=\"label\">\r\n                        Please enter your password\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\" \"\r\n                        minLength=\"6\"\r\n                        required\r\n                    />\r\n                    <hr className=\"border-bottom\" />\r\n                    <span className=\"placeholder\">password</span>\r\n                </div>\r\n                <center>\r\n                    <input\r\n                        type=\"submit\"\r\n                        value={loginSelect ? \"Login\" : \"Register\"}\r\n                        className=\"form-button\"\r\n                    />\r\n                </center>\r\n                <Link to=\"/password/forgot\" className=\"forgot-pass-text\">\r\n                    Forgot password ?\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}