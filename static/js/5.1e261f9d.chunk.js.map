{"version":3,"sources":["utils/metaData.js","actions/productActions.js","components/card/index.js","components/search/index.js","components/products/index.js"],"names":["MetaData","title","getProduct","keyword","currentPage","price","category","ratings","dispatch","a","type","link","axios","get","data","payload","response","message","getProductDetails","id","product","Card","props","to","_id","className","src","images","url","alt","name","activeColor","isHalf","edit","size","value","numOfReviews","Search","navigate","useNavigate","onSubmit","e","preventDefault","target","htmlFor","placeholder","minLength","required","categories","Products","React","useState","setCurrentPage","setPrice","setCategory","setRatings","applyFilter","setApplyFilter","useDispatch","params","useParams","useSelector","state","products","productsCount","resultPerPage","filteredProductsCount","useEffect","Slider","getAriaLabel","onChange","event","newPrice","valueLabelDisplay","step","min","max","map","v","i","onClick","newRating","marks","prev","index","activePage","itemsCountPerPage","totalItemsCount","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","activeClass","activeLinkClass"],"mappings":"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","file":"static/js/5.1e261f9d.chunk.js","sourcesContent":["import Helmet from \"react-helmet\";\r\n\r\nconst MetaData = ({ title }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default MetaData;\r\n","import axios from \"../utils/axiosConfig\";\r\n\r\nexport const getProduct =\r\n    (\r\n        keyword = \"\",\r\n        currentPage = 1,\r\n        price = [0, 25000],\r\n        category,\r\n        ratings = 0\r\n    ) =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch({\r\n                type: \"ALL_PRODUCT_REQUEST\",\r\n            });\r\n            let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&ratings[gte]=${ratings}`;\r\n\r\n            if (category) {\r\n                link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&category=${category}&ratings[gte]=${ratings}`;\r\n            }\r\n            const { data } = await axios.get(link);\r\n            dispatch({\r\n                type: \"ALL_PRODUCT_SUCCESS\",\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: \"ALL_PRODUCT_FAIL\",\r\n                payload: error.response.data.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({ type: \"CLEAR_ERRORS\" });\r\n};\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: \"PRODUCT_DETAILS_REQUEST\",\r\n        });\r\n        const { data } = await axios.get(`/api/v1/product/${id}`);\r\n        dispatch({\r\n            type: \"PRODUCT_DETAILS_SUCCESS\",\r\n            payload: data.product,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"PRODUCT_DETAILS_FAIL\",\r\n            payload: error.response.data.message,\r\n        });\r\n    }\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport \"./index.scss\";\r\n\r\nconst Card = ({ props }) => {\r\n    return (\r\n        <Link to={`/product/${props._id}`} className=\"card-container\">\r\n            <img src={props.images[0].url} alt={props.name} />\r\n            <p>{props.name}</p>\r\n            <div className=\"star-rev\">\r\n                <ReactStars\r\n                    activeColor=\"tomato\"\r\n                    isHalf={true}\r\n                    edit={false}\r\n                    size={20}\r\n                    value={props.ratings}\r\n                />{\" \"}\r\n                <span>({props.numOfReviews} reviews)</span>\r\n            </div>\r\n            <span className=\"price\">&#8377;{props.price}</span>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./index.scss\";\r\n\r\nconst Search = () => {\r\n    const navigate = useNavigate();\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let keyword = e.target.keyword.value;\r\n        if (keyword) {\r\n            navigate(`/products/${keyword}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className=\"search-container\" onSubmit={handleSubmit}>\r\n            <div className=\"inp-content\">\r\n                <label htmlFor=\"search\" className=\"label\">\r\n                    Please enter your search query\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"keyword\"\r\n                    placeholder=\" \"\r\n                    minLength=\"2\"\r\n                    required\r\n                />\r\n                <hr className=\"border-bottom\" />\r\n                <span className=\"placeholder\">search</span>\r\n            </div>\r\n            <input type=\"submit\" value=\"search\" className=\"form-button\" />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Card from \"../card\";\r\nimport MetaData from \"../../utils/metaData\";\r\nimport { getProduct } from \"../../actions/productActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Search from \"../search\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport \"./index.scss\";\r\n\r\nconst categories = [\"check\", \"laptop\", \"mobile\", \"footwear\"];\r\n\r\nconst Products = () => {\r\n    const [currentPage, setCurrentPage] = React.useState(1);\r\n    const [price, setPrice] = React.useState([0, 25000]);\r\n    const [category, setCategory] = React.useState();\r\n    const [ratings, setRatings] = React.useState(0);\r\n    const [applyFilter, setApplyFilter] = React.useState(false);\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n    const { products, productsCount, resultPerPage, filteredProductsCount } =\r\n        useSelector((state) => state.products);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(\r\n            getProduct(params.keyword, currentPage, price, category, ratings)\r\n        );\r\n    }, [dispatch, params, currentPage, applyFilter, price, category, ratings]);\r\n\r\n    return (\r\n        <div className=\"products-container\">\r\n            <MetaData title=\"Products\" />\r\n            <h3 className=\"headline\">Products</h3>\r\n            <Search />\r\n            <div className=\"products-filter-divider\">\r\n                {params.keyword && (\r\n                    <fieldset className=\"filter-box\">\r\n                        <legend>Filters</legend>\r\n                        Price:\r\n                        <Slider\r\n                            getAriaLabel={() => \"Price\"}\r\n                            value={price}\r\n                            onChange={(event, newPrice) => setPrice(newPrice)}\r\n                            valueLabelDisplay=\"auto\"\r\n                            step={500}\r\n                            min={0}\r\n                            max={25000}\r\n                        />\r\n                        Categories:\r\n                        <ul className=\"category-box\">\r\n                            {categories.map((v, i) => (\r\n                                <li key={i} onClick={() => setCategory(v)}>\r\n                                    {v}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        Ratings greater than:\r\n                        <Slider\r\n                            aria-label=\"Ratings\"\r\n                            value={ratings}\r\n                            onChange={(event, newRating) =>\r\n                                setRatings(newRating)\r\n                            }\r\n                            valueLabelDisplay=\"auto\"\r\n                            step={1}\r\n                            marks\r\n                            min={0}\r\n                            max={5}\r\n                        />\r\n                        <button\r\n                            className=\"filter-button\"\r\n                            onClick={() => setApplyFilter((prev) => !prev)}\r\n                        >\r\n                            Apply\r\n                        </button>\r\n                    </fieldset>\r\n                )}\r\n\r\n                <div className=\"products-box\">\r\n                    <div className=\"products\">\r\n                        {products &&\r\n                            products.map((product, index) => (\r\n                                <Card key={index} props={product} />\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {resultPerPage <= filteredProductsCount && (\r\n                <div className=\"paginationBox\">\r\n                    <Pagination\r\n                        activePage={currentPage}\r\n                        itemsCountPerPage={resultPerPage}\r\n                        totalItemsCount={productsCount}\r\n                        onChange={(e) => setCurrentPage(e)}\r\n                        nextPageText=\"Next\"\r\n                        prevPageText=\"Prev\"\r\n                        firstPageText=\"1st\"\r\n                        lastPageText=\"Last\"\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                        activeClass=\"pageItemActive\"\r\n                        activeLinkClass=\"pageLinkActive\"\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n"],"sourceRoot":""}