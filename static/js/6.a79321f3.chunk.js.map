{"version":3,"sources":["actions/cartActions.js","actions/orderActions.js","components/confirmOrder/index.js","components/shipping/const.js","components/shipping/index.js","components/checkOutSteps/index.js"],"names":["addItemsToCart","product","quantity","dispatch","getState","type","payload","_id","name","price","image","images","url","stock","localStorage","setItem","JSON","stringify","cart","cartItems","removeCartItem","prod_id","saveShippingInfo","data","a","createOrder","paymentInfo","config","headers","orderInfo","parse","sessionStorage","getItem","orderItems","forEach","item","order","shippingInfo","axios","post","removeItem","response","message","myOrders","get","orders","getOrderDetails","id","role","ConfirmOrder","React","useState","tranxInProcess","setTranxInProcess","useSelector","state","user","navigate","useNavigate","useDispatch","uidGen","Date","now","toString","Math","random","substr","uid","useRef","subtotal","reduce","acc","shippingCharges","tax","totalPrice","address","city","pinCode","country","initTxn","current","cont","root","flow","orderId","token","body","txnToken","tokenType","amount","merchant","redirect","handler","notifyMerchant","eventName","window","Paytm","CheckoutJS","close","console","log","transactionStatus","paymentStatus","RESPCODE","alert","txn_id","TXNID","txnStatus","STATUS","txnDate","TXNDATE","gatewayName","GATEWAYNAME","txnMode","PAYMENTMODE","RESPMSG","init","then","invoke","catch","error","className","title","phoneNumber","map","i","to","src","alt","onClick","sessionData","disabled","FORM_INPS","label","placeholder","minLength","maxLength","pattern","Shipping","setStep","setState","setCountry","formRef","useEffect","v","value","onSubmit","e","preventDefault","key","target","ref","htmlFor","required","onChange","Country","getAllCountries","isoCode","State","getStatesOfCountry","CheckOutSteper","step","payTMEmbed","MID","scriptElement","document","createElement","async","appendChild","prev"],"mappings":"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","file":"static/js/6.a79321f3.chunk.js","sourcesContent":["// add items to cart\nexport const addItemsToCart = (product, quantity) => (dispatch, getState) => {\n    dispatch({\n        type: \"ADD_TO_CART\",\n        payload: {\n            _id: product._id,\n            name: product.name,\n            price: product.price,\n            image: product.image || product?.images[0]?.url,\n            stock: product.stock,\n            quantity,\n        },\n    });\n    localStorage.setItem(\n        \"cartItems\",\n        JSON.stringify(getState().cart.cartItems)\n    );\n};\n\n// remove cart item\nexport const removeCartItem = (prod_id) => (dispatch, getState) => {\n    dispatch({\n        type: \"REMOVE_CART_ITEM\",\n        payload: prod_id,\n    });\n    localStorage.setItem(\n        \"cartItems\",\n        JSON.stringify(getState().cart.cartItems)\n    );\n};\n\n// save shipping info\nexport const saveShippingInfo = (data) => async (dispatch) => {\n    dispatch({\n        type: \"SAVE_SHIPPING_INFO\",\n        payload: data,\n    });\n\n    localStorage.setItem(\"shippingInfo\", JSON.stringify(data));\n};\n","import axios from \"../utils/axiosConfig\";\n\n// Create Order\nexport const createOrder = (paymentInfo) => async (dispatch) => {\n    try {\n        dispatch({ type: \"CREATE_ORDER_REQUEST\" });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n        const orderInfo = JSON.parse(sessionStorage.getItem(\"orderInfo\"));\n        const orderItems = JSON.parse(localStorage.getItem(\"cartItems\"));\n        orderItems.forEach((item) => {\n            item.product = item._id;\n            delete item._id;\n        });\n\n        const order = {\n            shippingInfo: JSON.parse(localStorage.getItem(\"shippingInfo\")),\n            orderItems: orderItems,\n            paymentInfo: paymentInfo,\n            ...orderInfo,\n        };\n        const { data } = await axios.post(\"/api/v1/order/new\", order, config);\n\n        dispatch({ type: \"CREATE_ORDER_SUCCESS\", payload: data });\n        localStorage.removeItem(\"cartItems\");\n        sessionStorage.removeItem(\"orderInfo\");\n        dispatch({ type: \"CLEAR_CART\" });\n    } catch (error) {\n        dispatch({\n            type: \"CREATE_ORDER_FAIL\",\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// My Orders\nexport const myOrders = () => async (dispatch) => {\n    try {\n        dispatch({ type: \"MY_ORDERS_REQUEST\" });\n\n        const { data } = await axios.get(\"/api/v1/orders/me\");\n\n        dispatch({ type: \"MY_ORDERS_SUCCESS\", payload: data.orders });\n    } catch (error) {\n        dispatch({\n            type: \"MY_ORDERS_FAIL\",\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Get All Orders (admin)\nexport const getAllOrders = () => async (dispatch) => {\n    try {\n        dispatch({ type: \"ALL_ORDERS_REQUEST\" });\n\n        const { data } = await axios.get(\"/api/v1/admin/orders\");\n\n        dispatch({ type: \"ALL_ORDERS_SUCCESS\", payload: data.orders });\n    } catch (error) {\n        dispatch({\n            type: \"ALL_ORDERS_FAIL\",\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Update Order\nexport const updateOrder = (id, order) => async (dispatch) => {\n    try {\n        dispatch({ type: \"UPDATE_ORDER_REQUEST\" });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n        const { data } = await axios.put(\n            `/api/v1/admin/order/${id}`,\n            order,\n            config\n        );\n\n        dispatch({ type: \"UPDATE_ORDER_SUCCESS\", payload: data.success });\n    } catch (error) {\n        dispatch({\n            type: \"UPDATE_ORDER_FAIL\",\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Delete Order\nexport const deleteOrder = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: \"DELETE_ORDER_REQUEST\" });\n\n        const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\n\n        dispatch({ type: \"DELETE_ORDER_SUCCESS\", payload: data.success });\n    } catch (error) {\n        dispatch({\n            type: \"DELETE_ORDER_FAIL\",\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Get Order Details\nexport const getOrderDetails = (id, role) => async (dispatch) => {\n    try {\n        dispatch({ type: \"ORDER_DETAILS_REQUEST\" });\n        const url =\n            role === \"admin\"\n                ? `/api/v1/admin/order/${id}`\n                : `/api/v1/order/${id}`;\n        const { data } = await axios.get(url);\n\n        dispatch({ type: \"ORDER_DETAILS_SUCCESS\", payload: data.order });\n    } catch (error) {\n        dispatch({\n            type: \"ORDER_DETAILS_FAIL\",\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({ type: \"CLEAR_ERRORS\" });\n};\n","import React from \"react\";\nimport MetaData from \"../../utils/metaData\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"../../utils/axiosConfig\";\nimport \"./index.scss\";\nimport { createOrder } from \"../../actions/orderActions\";\nimport Loader from \"../layout/loader\";\n\nconst ConfirmOrder = () => {\n    const [tranxInProcess, setTranxInProcess] = React.useState(false);\n    const { shippingInfo, cartItems } = useSelector((state) => state.cart);\n    const { user } = useSelector((state) => state.user);\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const uidGen = () => {\n        return Date.now().toString(36) + Math.random().toString(36).substr(2);\n    };\n    const uid = React.useRef(uidGen());\n\n    const subtotal = cartItems.reduce(\n        (acc, item) => acc + item.quantity * item.price,\n        0\n    );\n    const shippingCharges = subtotal > 1000 ? 0 : 50;\n    const tax = subtotal * 0.18;\n    const totalPrice = subtotal + tax + shippingCharges;\n    const address = `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.state}, ${shippingInfo.pinCode}, ${shippingInfo.country}`;\n\n    const proceedHandler = () => {\n        setTranxInProcess(true);\n        const sessionData = {\n            subtotal,\n            shippingCharges,\n            tax,\n            totalPrice,\n        };\n\n        sessionStorage.setItem(\"orderInfo\", JSON.stringify(sessionData));\n        initTxn();\n    };\n\n    const initTxn = async () => {\n        const { data } = await axios.post(\n            \"/api/v1/init-txn\",\n            { uid: uid.current, totalPrice: totalPrice },\n            {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            }\n        );\n        data.response = await JSON.parse(data.response);\n        cont(data.response);\n    };\n\n    const cont = (response) => {\n        var config = {\n            root: \"\",\n            flow: \"DEFAULT\",\n            data: {\n                orderId: uid.current /* update order id */,\n                token: response.body.txnToken /* update token value */,\n                tokenType: \"TXN_TOKEN\",\n                amount: totalPrice /* update amount */,\n            },\n            merchant: {\n                redirect: false,\n            },\n            handler: {\n                notifyMerchant: function (eventName, data) {\n                    if (eventName === \"APP_CLOSED\") {\n                        setTranxInProcess(false);\n                    }\n                    if (eventName === \"PAYMENT_ERROR\") {\n                        setTranxInProcess(false);\n                        window.Paytm.CheckoutJS.close();\n                    }\n                    console.log(\"notifyMerchant handler function called\");\n                    console.log(\"eventName => \", eventName);\n                    console.log(\"data => \", data);\n                },\n                transactionStatus: function transactionStatus(paymentStatus) {\n                    console.log(\"paymentStatus => \", paymentStatus);\n                    if (paymentStatus.RESPCODE === \"01\") {\n                        alert(\"Payment Successfull\");\n                        const paymentInfo = {\n                            txn_id: paymentStatus.TXNID,\n                            txnStatus: paymentStatus.STATUS,\n                            txnDate: paymentStatus.TXNDATE,\n                            gatewayName: paymentStatus.GATEWAYNAME,\n                            txnMode: paymentStatus.PAYMENTMODE,\n                        };\n                        dispatch(createOrder(paymentInfo));\n                        window.Paytm.CheckoutJS.close();\n                        setTranxInProcess(false);\n                        navigate(\"/orders\");\n                    } else if (paymentStatus.RESPCODE === \"400\") {\n                        alert(\"Payment Pending\");\n                        window.Paytm.CheckoutJS.close();\n                        setTranxInProcess(false);\n                    } else {\n                        alert(paymentStatus.RESPMSG);\n                        window.Paytm.CheckoutJS.close();\n                        setTranxInProcess(false);\n                        uid.current = uidGen();\n                    }\n                },\n            },\n        };\n\n        if (window.Paytm && window.Paytm.CheckoutJS) {\n            // initialze configuration using init method\n            window.Paytm.CheckoutJS.init(config)\n                .then(function onSuccess() {\n                    // after successfully updating configuration, invoke JS Checkout\n                    window.Paytm.CheckoutJS.invoke();\n                })\n                .catch(function onError(error) {\n                    alert(\"oops something went wrong, try again!\");\n                    setTranxInProcess(false);\n                    uid.current = uidGen();\n                    console.log(\"error => \", error);\n                });\n        }\n    };\n\n    return (\n        <>\n            {tranxInProcess && <Loader />}\n            <div className=\"confirm-container\">\n                <MetaData title=\"Confirm Order\" />\n                <div className=\"left\">\n                    <span className=\"title\">Shipping Info</span>\n                    <div className=\"shipping-info-box\">\n                        <div className=\"shipping-info-item\">\n                            <p>\n                                Name: {` `}\n                                <span>{user.name}</span>\n                            </p>\n                        </div>\n                        <div className=\"shipping-info-item\">\n                            <p>\n                                Phone: {` `}\n                                <span>{shippingInfo.phoneNumber}</span>\n                            </p>\n                        </div>\n                        <div className=\"shipping-info-item\">\n                            <p>\n                                Address: {` `}\n                                <span>{address}</span>\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"cart-items-container\">\n                        <div className=\"title\">Your Cart Items:</div>\n                        {cartItems &&\n                            cartItems.map((item, i) => (\n                                <Link to={`/product/${item._id}`} key={i}>\n                                    <div className=\"cart-items\">\n                                        <img src={item.image} alt=\"Product\" />\n\n                                        {item.name}\n                                        <span>\n                                            {item.quantity} X ₹{item.price} ={\" \"}\n                                            <b>₹{item.price * item.quantity}</b>\n                                        </span>\n                                    </div>\n                                </Link>\n                            ))}\n                    </div>\n                </div>\n                <div className=\"right\">\n                    <div className=\"title\"> Order Summary</div>\n                    <div>\n                        <div className=\"order-summary\">\n                            <p>Subtotal:</p>\n                            <span>₹{subtotal}</span>\n                        </div>\n                        <div className=\"order-summary\">\n                            <p>Shipping Charges:</p>\n                            <span>₹{shippingCharges}</span>\n                        </div>\n                        <div className=\"order-summary\">\n                            <p>GST:</p>\n                            <span>₹{tax}</span>\n                        </div>\n                    </div>\n                    <div className=\"order-summary total\">\n                        <p>\n                            <b>Total:</b>\n                        </p>\n                        <span>₹{totalPrice}</span>\n                    </div>\n                    <button\n                        type=\"button\"\n                        className=\"proceed\"\n                        onClick={proceedHandler}\n                        disabled={tranxInProcess}\n                    >\n                        Proceed to payment\n                    </button>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ConfirmOrder;\n","const FORM_INPS = [\n    {\n        label: \"Please Enter Your Address\",\n        type: \"text\",\n        name: \"address\",\n        placeholder: \"Address\",\n    },\n    {\n        label: \"Please Enter Your City\",\n        type: \"text\",\n        name: \"city\",\n        placeholder: \"City\",\n    },\n    {\n        label: \"Please Enter Your Pin Code\",\n        type: \"tel\",\n        name: \"pinCode\",\n        placeholder: \"Pin Code\",\n        minLength: \"6\",\n        maxLength: \"6\",\n        pattern: \"[0-9]{6}\",\n    },\n    {\n        label: \"Please Enter Your Phone Number\",\n        type: \"tel\",\n        name: \"phoneNumber\",\n        placeholder: \"Phone Number\",\n        minLength: \"10\",\n        maxLength: \"10\",\n        pattern: \"[0-9]{10}\",\n    },\n];\n\nexport default FORM_INPS;\n","import React from \"react\";\nimport FORM_INPS from \"./const\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./index.scss\";\nimport { saveShippingInfo } from \"../../actions/cartActions\";\nimport { Country, State } from \"country-state-city\";\n\nconst Shipping = ({ setStep }) => {\n    const { shippingInfo } = useSelector((state) => state.cart);\n    const [state, setState] = React.useState(shippingInfo.state);\n    const [country, setCountry] = React.useState(shippingInfo.country);\n    const formRef = React.useRef();\n    const dispatch = useDispatch();\n    const handleShipping = (e) => {\n        e.preventDefault();\n        let payload = {};\n        FORM_INPS.forEach((v) => {\n            let key = v.name;\n            let value = e.target[key].value;\n            payload[key] = value;\n        });\n        payload[\"country\"] = country;\n        payload[\"state\"] = state;\n        dispatch(saveShippingInfo(payload));\n        setStep(1);\n    };\n\n    React.useEffect(() => {\n        if (shippingInfo.address) {\n            FORM_INPS.forEach((v, i) => {\n                formRef.current[i].value = shippingInfo[v.name];\n            });\n        }\n    }, [shippingInfo]);\n\n    return (\n        <form\n            className=\"shipping-container\"\n            onSubmit={handleShipping}\n            ref={formRef}\n        >\n            <div className=\"head\">Shipping Details</div>\n            {FORM_INPS.map((v, i) => {\n                return (\n                    <div className=\"inp-content\" key={i}>\n                        <label htmlFor={v.name} className=\"label\">\n                            {v.label}\n                        </label>\n                        <input\n                            type={v.type}\n                            name={v.name}\n                            placeholder=\" \"\n                            minLength={v.minLength || \"3\"}\n                            maxLength={v.maxLength || \"100\"}\n                            pattern={v.pattern}\n                            required\n                        />\n                        <hr className=\"border-bottom\" />\n                        <span className=\"placeholder\">{v.placeholder}</span>\n                    </div>\n                );\n            })}\n            <div className=\"inp-content\">\n                <span className=\"placeholder\">Please select your country</span>\n                <select\n                    name=\"country\"\n                    className=\"select\"\n                    required\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)}\n                >\n                    <option value=\"\">Country</option>\n                    {Country &&\n                        Country.getAllCountries().map((item) => (\n                            <option key={item.isoCode} value={item.isoCode}>\n                                {item.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n\n            {country && (\n                <div className=\"inp-content\">\n                    <span className=\"placeholder\">\n                        Please select your state\n                    </span>\n                    <select\n                        className=\"inp-content select\"\n                        required\n                        value={state}\n                        onChange={(e) => setState(e.target.value)}\n                    >\n                        <option value=\"\">State</option>\n                        {State &&\n                            State.getStatesOfCountry(country).map((item) => (\n                                <option key={item.isoCode} value={item.isoCode}>\n                                    {item.name}\n                                </option>\n                            ))}\n                    </select>\n                </div>\n            )}\n\n            <div className=\"cont-btns\">\n                <input type=\"submit\" className=\"continue\" value=\"Continue\" />\n            </div>\n        </form>\n    );\n};\n\nexport default Shipping;\n","import React from \"react\";\nimport ConfirmOrder from \"../confirmOrder\";\nimport Shipping from \"../shipping\";\nimport axios from \"../../utils/axiosConfig\";\n\nimport \"./index.scss\";\n\nconst CheckOutSteper = () => {\n    const [step, setStep] = React.useState(0);\n    React.useEffect(() => {\n        const payTMEmbed = async () => {\n            const { data } = await axios.get(\"/api/v1/paytm-MID\");\n            const url = `https://securegw-stage.paytm.in/merchantpgpui/checkoutjs/merchants/${data.MID}.js`;\n            const scriptElement = document.createElement(\"script\");\n            scriptElement.src = url;\n            scriptElement.async = true;\n            scriptElement.type = \"application/javascript\";\n            document.body.appendChild(scriptElement);\n        };\n        payTMEmbed();\n    }, []);\n    return (\n        <div className=\"check-out\">\n            {step === 0 && <Shipping setStep={setStep} />}\n            {step === 1 && <ConfirmOrder />}\n            <div className=\"cont-btns\">\n                {step !== 0 && (\n                    <button\n                        className=\"continue\"\n                        type=\"button\"\n                        onClick={() => setStep((prev) => prev - 1)}\n                    >\n                        Previous\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default CheckOutSteper;\n"],"sourceRoot":""}