{"version":3,"sources":["actions/orderActions.js","components/order/index.js"],"names":["createOrder","paymentInfo","dispatch","a","type","config","headers","orderInfo","JSON","parse","sessionStorage","getItem","orderItems","localStorage","forEach","item","product","_id","order","shippingInfo","axios","post","data","payload","removeItem","response","message","myOrders","get","orders","getOrderDetails","id","role","url","Order","useSelector","state","orderDetails","user","params","useParams","navigate","useNavigate","useDispatch","React","useEffect","className","name","phoneNumber","address","city","pinCode","country","totalPrice","txnStatus","txnDate","orderStatus","map","prod","index","onClick","src","image","alt","price","quantity","subtotal","tax","shippingCharges"],"mappings":"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","file":"static/js/13.037ca2da.chunk.js","sourcesContent":["import axios from \"../utils/axiosConfig\";\n\n// Create Order\nexport const createOrder = (paymentInfo) => async (dispatch) => {\n    try {\n        dispatch({ type: \"CREATE_ORDER_REQUEST\" });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n        const orderInfo = JSON.parse(sessionStorage.getItem(\"orderInfo\"));\n        const orderItems = JSON.parse(localStorage.getItem(\"cartItems\"));\n        orderItems.forEach((item) => {\n            item.product = item._id;\n            delete item._id;\n        });\n\n        const order = {\n            shippingInfo: JSON.parse(localStorage.getItem(\"shippingInfo\")),\n            orderItems: orderItems,\n            paymentInfo: paymentInfo,\n            ...orderInfo,\n        };\n        const { data } = await axios.post(\"/api/v1/order/new\", order, config);\n\n        dispatch({ type: \"CREATE_ORDER_SUCCESS\", payload: data });\n        localStorage.removeItem(\"cartItems\");\n        sessionStorage.removeItem(\"orderInfo\");\n        dispatch({ type: \"CLEAR_CART\" });\n    } catch (error) {\n        dispatch({\n            type: \"CREATE_ORDER_FAIL\",\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// My Orders\nexport const myOrders = () => async (dispatch) => {\n    try {\n        dispatch({ type: \"MY_ORDERS_REQUEST\" });\n\n        const { data } = await axios.get(\"/api/v1/orders/me\");\n\n        dispatch({ type: \"MY_ORDERS_SUCCESS\", payload: data.orders });\n    } catch (error) {\n        dispatch({\n            type: \"MY_ORDERS_FAIL\",\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Get All Orders (admin)\nexport const getAllOrders = () => async (dispatch) => {\n    try {\n        dispatch({ type: \"ALL_ORDERS_REQUEST\" });\n\n        const { data } = await axios.get(\"/api/v1/admin/orders\");\n\n        dispatch({ type: \"ALL_ORDERS_SUCCESS\", payload: data.orders });\n    } catch (error) {\n        dispatch({\n            type: \"ALL_ORDERS_FAIL\",\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Update Order\nexport const updateOrder = (id, order) => async (dispatch) => {\n    try {\n        dispatch({ type: \"UPDATE_ORDER_REQUEST\" });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n        const { data } = await axios.put(\n            `/api/v1/admin/order/${id}`,\n            order,\n            config\n        );\n\n        dispatch({ type: \"UPDATE_ORDER_SUCCESS\", payload: data.success });\n    } catch (error) {\n        dispatch({\n            type: \"UPDATE_ORDER_FAIL\",\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Delete Order\nexport const deleteOrder = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: \"DELETE_ORDER_REQUEST\" });\n\n        const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\n\n        dispatch({ type: \"DELETE_ORDER_SUCCESS\", payload: data.success });\n    } catch (error) {\n        dispatch({\n            type: \"DELETE_ORDER_FAIL\",\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Get Order Details\nexport const getOrderDetails = (id, role) => async (dispatch) => {\n    try {\n        dispatch({ type: \"ORDER_DETAILS_REQUEST\" });\n        const url =\n            role === \"admin\"\n                ? `/api/v1/admin/order/${id}`\n                : `/api/v1/order/${id}`;\n        const { data } = await axios.get(url);\n\n        dispatch({ type: \"ORDER_DETAILS_SUCCESS\", payload: data.order });\n    } catch (error) {\n        dispatch({\n            type: \"ORDER_DETAILS_FAIL\",\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({ type: \"CLEAR_ERRORS\" });\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { getOrderDetails } from \"../../actions/orderActions\";\nimport \"../cart/index.scss\";\nimport \"./index.scss\";\n\nconst Order = () => {\n    const { order } = useSelector((state) => state.orderDetails);\n    const { user } = useSelector((state) => state.user);\n    const params = useParams();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        dispatch(getOrderDetails(params.id, user.role));\n    }, [dispatch, user.role, params.id]);\n    return (\n        <div className=\"order-container\">\n            {order?._id && (\n                <>\n                    <div className=\"order-id\">Order {order._id}</div>\n                    <div className=\"base order-ship\">\n                        <div className=\"title\">Shipping Details:</div>\n                        Name: {order.user.name}\n                        <br />\n                        Phone: {order.shippingInfo.phoneNumber}\n                        <br />\n                        Address:{\" \"}\n                        {`${order.shippingInfo.address},\n                            ${order.shippingInfo.city},\n                            ${order.shippingInfo.state},\n                            ${order.shippingInfo.pinCode},\n                        ${order.shippingInfo.country}`}\n                    </div>\n                    <div className=\"base order-pay\">\n                        <div className=\"title\">Payment Info:</div>\n                        Amount : {`â‚¹ ${order.totalPrice}`}\n                        <br />\n                        Status : {order.paymentInfo.txnStatus}\n                        <br />\n                        Paid on :{order.paymentInfo.txnDate}\n                        <br />\n                    </div>\n                    <div className=\"base order-stat\">\n                        <div className=\"title\">Order Status:</div>\n                        {order.orderStatus}\n                    </div>\n                    <div className=\"cart-container\">\n                        <div className=\"cart-item header\">\n                            <span className=\"prod\">Product</span>\n                            <span className=\"quant\">Quantity</span>\n                            <span className=\"subt head\">Sub Total</span>\n                        </div>\n                        {order.orderItems.map((prod, index) => (\n                            <div className=\"cart-item\" key={index}>\n                                <span\n                                    className=\"prod\"\n                                    onClick={() =>\n                                        navigate(`/product/${prod.product}`)\n                                    }\n                                >\n                                    <img\n                                        src={prod.image}\n                                        className=\"prod-img\"\n                                        alt={prod.name}\n                                    />\n                                    <span className=\"prod-details\">\n                                        <span className=\"prod-name\">\n                                            {prod.name}\n                                        </span>\n                                        <span>\n                                            <span>Price: </span>\n                                            {`â‚¹${prod.price}`}\n                                        </span>\n                                    </span>\n                                </span>\n                                <span className=\"quant\">\n                                    <div className=\"order-count\">\n                                        {prod.quantity}\n                                    </div>\n                                </span>\n                                <span className=\"subt\">{`â‚¹${\n                                    prod.price * prod.quantity\n                                }`}</span>\n                            </div>\n                        ))}\n                        <div className=\"cart-item\">\n                            <div className=\"gross-total\">\n                                <div>\n                                    <span className=\"title\">Gross Total:</span>\n                                    <span className=\"price\">\n                                        {`â‚¹${order.subtotal}`}\n                                    </span>\n                                </div>\n                                <div>\n                                    <span className=\"title\">Tax:</span>\n                                    <span className=\"price\">{`â‚¹${order.tax}`}</span>\n                                </div>\n                                <div>\n                                    <span className=\"title\">Shipping:</span>\n                                    <span className=\"price\">{`â‚¹${order.shippingCharges}`}</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"cart-item\">\n                            <span className=\"gross-total\">\n                                <span className=\"title\">Total:</span>\n                                <span className=\"price\">{`â‚¹${order.totalPrice}`}</span>\n                            </span>\n                        </div>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Order;\n"],"sourceRoot":""}