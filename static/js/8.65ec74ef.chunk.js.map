{"version":3,"sources":["utils/metaData.js","actions/cartActions.js","components/confirmOrder/index.js","actions/orderActions.js","components/shipping/const.js","components/shipping/index.js","components/checkOutSteps/index.js"],"names":["MetaData","title","addItemsToCart","product","quantity","dispatch","getState","type","payload","_id","name","price","image","images","url","stock","localStorage","setItem","JSON","stringify","cart","cartItems","removeCartItem","prod_id","saveShippingInfo","data","a","ConfirmOrder","setStep","useSelector","state","shippingInfo","user","navigate","useNavigate","useDispatch","uid","React","useRef","subtotal","reduce","acc","item","shippingCharges","tax","totalPrice","address","city","pinCode","country","initTxn","axios","post","current","headers","parse","response","cont","config","root","flow","orderId","token","body","txnToken","tokenType","amount","merchant","redirect","handler","notifyMerchant","eventName","console","log","transactionStatus","paymentStatus","RESPCODE","alert","paymentInfo","txn_id","TXNID","txnStatus","TXNDATE","txnDate","gatewayName","GATEWAYNAME","txnMode","PAYMENTMODE","orderInfo","sessionStorage","getItem","orderItems","forEach","order","message","createOrder","removeItem","window","location","reload","RESPMSG","Paytm","CheckoutJS","init","then","invoke","catch","error","useEffect","Date","now","toString","Math","random","substr","className","phoneNumber","map","i","to","src","alt","onClick","sessionData","FORM_INPS","label","placeholder","minLength","maxLength","pattern","Shipping","useState","setState","setCountry","formRef","v","value","onSubmit","e","preventDefault","key","target","ref","htmlFor","required","onChange","Country","getAllCountries","isoCode","State","getStatesOfCountry","CheckOutSteper","step","payTMEmbed","get","MID","scriptElement","document","createElement","async","appendChild","prev"],"mappings":"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","file":"static/js/8.65ec74ef.chunk.js","sourcesContent":["import Helmet from \"react-helmet\";\r\n\r\nconst MetaData = ({ title }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default MetaData;\r\n","// add items to cart\r\nexport const addItemsToCart = (product, quantity) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payload: {\r\n            _id: product._id,\r\n            name: product.name,\r\n            price: product.price,\r\n            image: product.image || product?.images[0]?.url,\r\n            stock: product.stock,\r\n            quantity,\r\n        },\r\n    });\r\n    localStorage.setItem(\r\n        \"cartItems\",\r\n        JSON.stringify(getState().cart.cartItems)\r\n    );\r\n};\r\n\r\n// remove cart item\r\nexport const removeCartItem = (prod_id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: \"REMOVE_CART_ITEM\",\r\n        payload: prod_id,\r\n    });\r\n    localStorage.setItem(\r\n        \"cartItems\",\r\n        JSON.stringify(getState().cart.cartItems)\r\n    );\r\n};\r\n\r\n// save shiiping info\r\nexport const saveShippingInfo = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: \"SAVE_SHIPPING_INFO\",\r\n        payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"shippingInfo\", JSON.stringify(data));\r\n};\r\n","import React from \"react\";\r\nimport MetaData from \"../../utils/metaData\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"../../utils/axiosConfig\";\r\nimport \"./index.scss\";\r\nimport { createOrder } from \"../../actions/orderActions\";\r\n\r\nconst ConfirmOrder = ({ setStep }) => {\r\n    const { shippingInfo, cartItems } = useSelector((state) => state.cart);\r\n    const { user } = useSelector((state) => state.user);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const uid = React.useRef();\r\n\r\n    const uidGen = () => {\r\n        return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n    };\r\n\r\n    const subtotal = cartItems.reduce(\r\n        (acc, item) => acc + item.quantity * item.price,\r\n        0\r\n    );\r\n    const shippingCharges = subtotal > 1000 ? 0 : 50;\r\n    const tax = subtotal * 0.18;\r\n    const totalPrice = subtotal + tax + shippingCharges;\r\n    const address = `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.state}, ${shippingInfo.pinCode}, ${shippingInfo.country}`;\r\n\r\n    const proceedHandler = () => {\r\n        const sessionData = {\r\n            subtotal,\r\n            shippingCharges,\r\n            tax,\r\n            totalPrice,\r\n        };\r\n\r\n        sessionStorage.setItem(\"orderInfo\", JSON.stringify(sessionData));\r\n        initTxn();\r\n    };\r\n\r\n    const initTxn = async () => {\r\n        const { data } = await axios.post(\r\n            \"/api/v1/init-txn\",\r\n            { uid: uid.current, totalPrice: totalPrice },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            }\r\n        );\r\n        data.response = await JSON.parse(data.response);\r\n        cont(data.response);\r\n    };\r\n\r\n    const cont = (response) => {\r\n        var config = {\r\n            root: \"\",\r\n            flow: \"DEFAULT\",\r\n            data: {\r\n                orderId: uid.current /* update order id */,\r\n                token: response.body.txnToken /* update token value */,\r\n                tokenType: \"TXN_TOKEN\",\r\n                amount: totalPrice /* update amount */,\r\n            },\r\n            merchant: {\r\n                redirect: false,\r\n            },\r\n            handler: {\r\n                notifyMerchant: function (eventName, data) {\r\n                    console.log(\"notifyMerchant handler function called\");\r\n                    console.log(\"eventName => \", eventName);\r\n                    console.log(\"data => \", data);\r\n                },\r\n                transactionStatus: function transactionStatus(paymentStatus) {\r\n                    console.log(\"paymentStatus => \", paymentStatus);\r\n                    if (paymentStatus.RESPCODE === \"01\") {\r\n                        alert(\"Payment Successfull\");\r\n                        const paymentInfo = {\r\n                            txn_id: paymentStatus.TXNID,\r\n                            txnStatus: paymentStatus.TXNDATE,\r\n                            txnDate: paymentStatus.TXNDATE,\r\n                            gatewayName: paymentStatus.GATEWAYNAME,\r\n                            txnMode: paymentStatus.PAYMENTMODE,\r\n                        };\r\n                        dispatch(createOrder(paymentInfo));\r\n                        localStorage.removeItem(\"cartItems\");\r\n                        sessionStorage.removeItem(\"uid\");\r\n                        sessionStorage.removeItem(\"orderInfo\");\r\n                        navigate(\"/\");\r\n                        window.location.reload();\r\n                    } else if (paymentStatus.RESPCODE === \"400\") {\r\n                        alert(\"Payment Pending\");\r\n                        window.location.reload();\r\n                    } else {\r\n                        alert(paymentStatus.RESPMSG);\r\n                        window.location.reload();\r\n                    }\r\n                },\r\n            },\r\n        };\r\n\r\n        if (window.Paytm && window.Paytm.CheckoutJS) {\r\n            // initialze configuration using init method\r\n            window.Paytm.CheckoutJS.init(config)\r\n                .then(function onSuccess() {\r\n                    // after successfully updating configuration, invoke JS Checkout\r\n                    window.Paytm.CheckoutJS.invoke();\r\n                })\r\n                .catch(function onError(error) {\r\n                    console.log(\"error => \", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (sessionStorage.getItem(\"uid\")) {\r\n            uid.current = sessionStorage.getItem(\"uid\");\r\n        } else {\r\n            uid.current = uidGen();\r\n            sessionStorage.setItem(\"uid\", uid.current);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"confirm-container\">\r\n            <MetaData title=\"Confirm Order\" />\r\n            <div className=\"left\">\r\n                <span className=\"title\">Shipping Info</span>\r\n                <div className=\"shipping-info-box\">\r\n                    <div className=\"shipping-info-item\">\r\n                        <p>\r\n                            Name: {` `}\r\n                            <span>{user.name}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"shipping-info-item\">\r\n                        <p>\r\n                            Phone: {` `}\r\n                            <span>{shippingInfo.phoneNumber}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"shipping-info-item\">\r\n                        <p>\r\n                            Address: {` `}\r\n                            <span>{address}</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"cart-items-container\">\r\n                    <div className=\"title\">Your Cart Items:</div>\r\n                    {cartItems &&\r\n                        cartItems.map((item, i) => (\r\n                            <Link to={`/product/${item._id}`} key={i}>\r\n                                <div className=\"cart-items\">\r\n                                    <img src={item.image} alt=\"Product\" />\r\n\r\n                                    {item.name}\r\n                                    <span>\r\n                                        {item.quantity} X ₹{item.price} ={\" \"}\r\n                                        <b>₹{item.price * item.quantity}</b>\r\n                                    </span>\r\n                                </div>\r\n                            </Link>\r\n                        ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"right\">\r\n                <div className=\"title\"> Order Summary</div>\r\n                <div>\r\n                    <div className=\"order-summary\">\r\n                        <p>Subtotal:</p>\r\n                        <span>₹{subtotal}</span>\r\n                    </div>\r\n                    <div className=\"order-summary\">\r\n                        <p>Shipping Charges:</p>\r\n                        <span>₹{shippingCharges}</span>\r\n                    </div>\r\n                    <div className=\"order-summary\">\r\n                        <p>GST:</p>\r\n                        <span>₹{tax}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"order-summary total\">\r\n                    <p>\r\n                        <b>Total:</b>\r\n                    </p>\r\n                    <span>₹{totalPrice}</span>\r\n                </div>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"proceed\"\r\n                    onClick={proceedHandler}\r\n                >\r\n                    Proceed to payment\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConfirmOrder;\r\n","import axios from \"../utils/axiosConfig\";\r\n\r\n// Create Order\r\nexport const createOrder = (paymentInfo) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: \"CREATE_ORDER_REQUEST\" });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        const orderInfo = JSON.parse(sessionStorage.getItem(\"orderInfo\"));\r\n        const orderItems = JSON.parse(localStorage.getItem(\"cartItems\"));\r\n        orderItems.forEach((item) => {\r\n            item.product = item._id;\r\n            delete item._id;\r\n        });\r\n\r\n        const order = {\r\n            shippingInfo: JSON.parse(localStorage.getItem(\"shippingInfo\")),\r\n            orderItems: orderItems,\r\n            paymentInfo: paymentInfo,\r\n            ...orderInfo,\r\n        };\r\n        const { data } = await axios.post(\"/api/v1/order/new\", order, config);\r\n\r\n        dispatch({ type: \"CREATE_ORDER_SUCCESS\", payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"CREATE_ORDER_FAIL\",\r\n            payload: error.response.data.message,\r\n        });\r\n    }\r\n};\r\n","const FORM_INPS = [\r\n    {\r\n        label: \"Please Enter Your Address\",\r\n        type: \"text\",\r\n        name: \"address\",\r\n        placeholder: \"Address\",\r\n    },\r\n    {\r\n        label: \"Please Enter Your City\",\r\n        type: \"text\",\r\n        name: \"city\",\r\n        placeholder: \"City\",\r\n    },\r\n    {\r\n        label: \"Please Enter Your Pin Code\",\r\n        type: \"tel\",\r\n        name: \"pinCode\",\r\n        placeholder: \"Pin Code\",\r\n        minLength: \"6\",\r\n        maxLength: \"6\",\r\n        pattern: \"[0-9]{6}\",\r\n    },\r\n    {\r\n        label: \"Please Enter Your Phone Number\",\r\n        type: \"tel\",\r\n        name: \"phoneNumber\",\r\n        placeholder: \"Phone Number\",\r\n        minLength: \"10\",\r\n        maxLength: \"10\",\r\n        pattern: \"[0-9]{10}\",\r\n    },\r\n];\r\n\r\nexport default FORM_INPS;\r\n","import React from \"react\";\r\nimport FORM_INPS from \"./const\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./index.scss\";\r\nimport { saveShippingInfo } from \"../../actions/cartActions\";\r\nimport { Country, State } from \"country-state-city\";\r\n\r\nconst Shipping = ({ setStep }) => {\r\n    const { shippingInfo } = useSelector((state) => state.cart);\r\n    const [state, setState] = React.useState(shippingInfo.state);\r\n    const [country, setCountry] = React.useState(shippingInfo.country);\r\n    const formRef = React.useRef();\r\n    const dispatch = useDispatch();\r\n    const handleShipping = (e) => {\r\n        e.preventDefault();\r\n        let payload = {};\r\n        FORM_INPS.forEach((v) => {\r\n            let key = v.name;\r\n            let value = e.target[key].value;\r\n            payload[key] = value;\r\n        });\r\n        payload[\"country\"] = country;\r\n        payload[\"state\"] = state;\r\n        dispatch(saveShippingInfo(payload));\r\n        setStep(1);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (shippingInfo.address) {\r\n            FORM_INPS.forEach((v, i) => {\r\n                formRef.current[i].value = shippingInfo[v.name];\r\n            });\r\n        }\r\n    }, [shippingInfo]);\r\n\r\n    return (\r\n        <form\r\n            className=\"shipping-container\"\r\n            onSubmit={handleShipping}\r\n            ref={formRef}\r\n        >\r\n            <div className=\"head\">Shipping Details</div>\r\n            {FORM_INPS.map((v, i) => {\r\n                return (\r\n                    <div className=\"inp-content\" key={i}>\r\n                        <label htmlFor={v.name} className=\"label\">\r\n                            {v.label}\r\n                        </label>\r\n                        <input\r\n                            type={v.type}\r\n                            name={v.name}\r\n                            placeholder=\" \"\r\n                            minLength={v.minLength || \"3\"}\r\n                            maxLength={v.maxLength || \"100\"}\r\n                            pattern={v.pattern}\r\n                            required\r\n                        />\r\n                        <hr className=\"border-bottom\" />\r\n                        <span className=\"placeholder\">{v.placeholder}</span>\r\n                    </div>\r\n                );\r\n            })}\r\n            <div className=\"inp-content\">\r\n                <span className=\"placeholder\">Please select your country</span>\r\n                <select\r\n                    name=\"country\"\r\n                    className=\"select\"\r\n                    required\r\n                    value={country}\r\n                    onChange={(e) => setCountry(e.target.value)}\r\n                >\r\n                    <option value=\"\">Country</option>\r\n                    {Country &&\r\n                        Country.getAllCountries().map((item) => (\r\n                            <option key={item.isoCode} value={item.isoCode}>\r\n                                {item.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            {country && (\r\n                <div className=\"inp-content\">\r\n                    <span className=\"placeholder\">\r\n                        Please select your state\r\n                    </span>\r\n                    <select\r\n                        className=\"inp-content select\"\r\n                        required\r\n                        value={state}\r\n                        onChange={(e) => setState(e.target.value)}\r\n                    >\r\n                        <option value=\"\">State</option>\r\n                        {State &&\r\n                            State.getStatesOfCountry(country).map((item) => (\r\n                                <option key={item.isoCode} value={item.isoCode}>\r\n                                    {item.name}\r\n                                </option>\r\n                            ))}\r\n                    </select>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"cont-btns\">\r\n                <input type=\"submit\" className=\"continue\" value=\"Continue\" />\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Shipping;\r\n","import React from \"react\";\r\nimport ConfirmOrder from \"../confirmOrder\";\r\nimport Shipping from \"../shipping\";\r\nimport axios from \"../../utils/axiosConfig\";\r\n\r\nimport \"./index.scss\";\r\n\r\nconst CheckOutSteper = () => {\r\n    const [step, setStep] = React.useState(0);\r\n    React.useEffect(() => {\r\n        const payTMEmbed = async () => {\r\n            const { data } = await axios.get(\"/api/v1/paytm-MID\");\r\n            const url = `https://securegw-stage.paytm.in/merchantpgpui/checkoutjs/merchants/${data.MID}.js`;\r\n            const scriptElement = document.createElement(\"script\");\r\n            scriptElement.src = url;\r\n            scriptElement.async = true;\r\n            scriptElement.type = \"application/javascript\";\r\n            document.body.appendChild(scriptElement);\r\n        };\r\n        payTMEmbed();\r\n    }, []);\r\n    return (\r\n        <div className=\"check-out\">\r\n            {step === 0 && <Shipping setStep={setStep} />}\r\n            {step === 1 && <ConfirmOrder setStep={setStep} />}\r\n            {step === 2 && <Shipping setStep={setStep} />}\r\n            <div className=\"cont-btns\">\r\n                {step !== 0 && (\r\n                    <button\r\n                        className=\"continue\"\r\n                        type=\"button\"\r\n                        onClick={() => setStep((prev) => prev - 1)}\r\n                    >\r\n                        Previous\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CheckOutSteper;\r\n"],"sourceRoot":""}